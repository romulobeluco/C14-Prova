name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # ðŸ”¹ 1) Job de Testes
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout cÃ³digo
        uses: actions/checkout@v4

      - name: Instalar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Instalar dependÃªncias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-mock

      - name: Rodar testes
        run: |
          pytest --junitxml=report.xml --maxfail=1 --disable-warnings -q

      - name: Salvar relatÃ³rio de testes
        uses: actions/upload-artifact@v4
        with:
          name: relatorio-testes
          path: report.xml

  # ðŸ”¹ 2) Job de Build (roda em paralelo)
  # ðŸ”¹ 2) Job de Build (roda em paralelo)
  build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout cÃ³digo
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Instalar ferramentas de build
        run: |
          pip install --upgrade pip
          pip install build wheel setuptools

      - name: Empacotar aplicaÃ§Ã£o
        run: |
          python -m build

      - name: Salvar pacote
        uses: actions/upload-artifact@v4
        with:
          name: pacote-python
          path: dist/*

  # ðŸ”¹ 3) Job de NotificaÃ§Ã£o (em paralelo)
  notify:
    runs-on: ubuntu-latest
    needs: [tests, build]
    steps:
      - name: Checkout cÃ³digo
        uses: actions/checkout@v4

      - name: Instalar dependÃªncias
        run: sudo apt-get install -y mailutils

      - name: Enviar e-mail
        env:
          EMAIL_DESTINO: ${{ secrets.EMAIL_DESTINO }}
        run: |
          echo "Pipeline executado com sucesso!" | mail -s "NotificaÃ§Ã£o Pipeline" $EMAIL_DESTINO
